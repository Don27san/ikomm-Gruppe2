syntax = "proto3";
package typing_indicator;
import "google/protobuf/timestamp.proto";



//General Structures
message User {
    string userId = 1; 
    string serverId = 2;
}

message DiscoverServer {
  // Empty by design. Need this for correct parsing. Do not delete!
}

//Connection Management Structures
message ServerAnnounce {
    string serverId = 1;
    message Feature {
        string featureName = 1;
        uint32 port = 2;
    }
    repeated Feature feature = 2;
}


message ConnectClient { 
    User user = 1;
    int32 typingPort = 3; 
    int32 location_port = 2; //We'll must likely send a port info for location feature as well.
}

message ConnectionResponse {
    enum Result {
        UNKNOWN_ERROR = 0;
        CONNECTED = 1;
        IS_ALREADY_CONNECTED_ERROR = 2;
    }
    Result result = 1;
}

message HangUp {
    enum Reason {
        UNKNOWN_REASON = 0;
        EXIT = 1;
        TIMEOUT = 2;
        PAYLOAD_LIMIT_EXCEEDED = 3; // ex. 2mb payload
        MESSAGE_MALFORMED = 4; // ex. parse fail
    }
    Reason reason = 1;
 }

message Ping {
}

message Pong {
}





// ALL FEATURE Structures
// Chat Message
message ChatMessage {
    string messageId = 1;
    google.protobuf.Timestamp timestamp = 2;

    User author = 3;

    oneof recipient {
        User user = 4;
    };

    oneof content {
        string text = 11;
        LiveLocation live_location = 12;
       // stickers , etc...
    }
}


// Typing Indicator Structure
message TypingEvent {
    User user = 1;
    double timestamp = 2;
}

// Bundle for multiple typing events
message TypingEvents {
    repeated TypingEvent typing_events = 1;
}


//Live Location Structure
message LiveLocation {
    User user = 1;
    double timestamp = 2;
    double expiry_at = 3;
    message Location {
        double latitude = 1;
        double longitude = 2;
    };
    Location location = 4;
}

// Bundle for multiple LiveLocations
message LiveLocations {
    message ExtendedLiveLocation {
        LiveLocation live_location = 1;
        string chatmessageID = 2;
    }

    repeated ExtendedLiveLocation extended_live_locations = 1;
}

